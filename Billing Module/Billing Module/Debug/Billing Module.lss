
Billing Module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000528  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000057c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001169  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008ab  00000000  00000000  00001869  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ab4  00000000  00000000  00002114  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  00002bc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f3  00000000  00000000  00002dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b9e  00000000  00000000  000032af  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00003e4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  54:	5d 01       	movw	r10, r26
  56:	76 01       	movw	r14, r12
  58:	8f 01       	movw	r16, r30
  5a:	a8 01       	movw	r20, r16
  5c:	c0 01       	movw	r24, r0
  5e:	c0 01       	movw	r24, r0
  60:	c0 01       	movw	r24, r0
  62:	c0 01       	movw	r24, r0
  64:	c0 01       	movw	r24, r0
  66:	c0 01       	movw	r24, r0
  68:	c0 01       	movw	r24, r0
  6a:	c0 01       	movw	r24, r0
  6c:	c0 01       	movw	r24, r0
  6e:	c0 01       	movw	r24, r0
  70:	c0 01       	movw	r24, r0
  72:	c0 01       	movw	r24, r0
  74:	c0 01       	movw	r24, r0
  76:	c0 01       	movw	r24, r0
  78:	c0 01       	movw	r24, r0
  7a:	c0 01       	movw	r24, r0
  7c:	c0 01       	movw	r24, r0
  7e:	c0 01       	movw	r24, r0
  80:	c0 01       	movw	r24, r0
  82:	c0 01       	movw	r24, r0
  84:	c0 01       	movw	r24, r0
  86:	c0 01       	movw	r24, r0
  88:	c0 01       	movw	r24, r0
  8a:	c0 01       	movw	r24, r0
  8c:	c0 01       	movw	r24, r0
  8e:	c0 01       	movw	r24, r0
  90:	c0 01       	movw	r24, r0
  92:	c0 01       	movw	r24, r0
  94:	5d 01       	movw	r10, r26
  96:	76 01       	movw	r14, r12
  98:	8f 01       	movw	r16, r30
  9a:	a8 01       	movw	r20, r16
  9c:	cd 01       	movw	r24, r26
  9e:	e6 01       	movw	r28, r12
  a0:	ff 01       	movw	r30, r30
  a2:	18 02       	muls	r17, r24
  a4:	30 02       	muls	r19, r16
  a6:	30 02       	muls	r19, r16
  a8:	30 02       	muls	r19, r16
  aa:	30 02       	muls	r19, r16
  ac:	30 02       	muls	r19, r16
  ae:	30 02       	muls	r19, r16
  b0:	30 02       	muls	r19, r16
  b2:	30 02       	muls	r19, r16
  b4:	30 02       	muls	r19, r16
  b6:	30 02       	muls	r19, r16
  b8:	30 02       	muls	r19, r16
  ba:	30 02       	muls	r19, r16
  bc:	30 02       	muls	r19, r16
  be:	30 02       	muls	r19, r16
  c0:	30 02       	muls	r19, r16
  c2:	30 02       	muls	r19, r16
  c4:	30 02       	muls	r19, r16
  c6:	30 02       	muls	r19, r16
  c8:	30 02       	muls	r19, r16
  ca:	30 02       	muls	r19, r16
  cc:	30 02       	muls	r19, r16
  ce:	30 02       	muls	r19, r16
  d0:	30 02       	muls	r19, r16
  d2:	30 02       	muls	r19, r16
  d4:	30 02       	muls	r19, r16
  d6:	30 02       	muls	r19, r16
  d8:	30 02       	muls	r19, r16
  da:	30 02       	muls	r19, r16
  dc:	cd 01       	movw	r24, r26
  de:	e6 01       	movw	r28, r12
  e0:	ff 01       	movw	r30, r30
  e2:	18 02       	muls	r17, r24
  e4:	3c 02       	muls	r19, r28
  e6:	3e 02       	muls	r19, r30
  e8:	40 02       	muls	r20, r16
  ea:	42 02       	muls	r20, r18
  ec:	43 02       	muls	r20, r19
  ee:	43 02       	muls	r20, r19
  f0:	43 02       	muls	r20, r19
  f2:	43 02       	muls	r20, r19
  f4:	43 02       	muls	r20, r19
  f6:	43 02       	muls	r20, r19
  f8:	43 02       	muls	r20, r19
  fa:	43 02       	muls	r20, r19
  fc:	43 02       	muls	r20, r19
  fe:	43 02       	muls	r20, r19
 100:	43 02       	muls	r20, r19
 102:	43 02       	muls	r20, r19
 104:	43 02       	muls	r20, r19
 106:	43 02       	muls	r20, r19
 108:	43 02       	muls	r20, r19
 10a:	43 02       	muls	r20, r19
 10c:	43 02       	muls	r20, r19
 10e:	43 02       	muls	r20, r19
 110:	43 02       	muls	r20, r19
 112:	43 02       	muls	r20, r19
 114:	43 02       	muls	r20, r19
 116:	43 02       	muls	r20, r19
 118:	43 02       	muls	r20, r19
 11a:	43 02       	muls	r20, r19
 11c:	43 02       	muls	r20, r19
 11e:	43 02       	muls	r20, r19
 120:	43 02       	muls	r20, r19
 122:	43 02       	muls	r20, r19
 124:	3c 02       	muls	r19, r28
 126:	3e 02       	muls	r19, r30
 128:	40 02       	muls	r20, r16
 12a:	42 02       	muls	r20, r18
 12c:	51 02       	muls	r21, r17
 12e:	58 02       	muls	r21, r24
 130:	5f 02       	muls	r21, r31
 132:	66 02       	muls	r22, r22
 134:	6c 02       	muls	r22, r28
 136:	6c 02       	muls	r22, r28
 138:	6c 02       	muls	r22, r28
 13a:	6c 02       	muls	r22, r28
 13c:	6c 02       	muls	r22, r28
 13e:	6c 02       	muls	r22, r28
 140:	6c 02       	muls	r22, r28
 142:	6c 02       	muls	r22, r28
 144:	6c 02       	muls	r22, r28
 146:	6c 02       	muls	r22, r28
 148:	6c 02       	muls	r22, r28
 14a:	6c 02       	muls	r22, r28
 14c:	6c 02       	muls	r22, r28
 14e:	6c 02       	muls	r22, r28
 150:	6c 02       	muls	r22, r28
 152:	6c 02       	muls	r22, r28
 154:	6c 02       	muls	r22, r28
 156:	6c 02       	muls	r22, r28
 158:	6c 02       	muls	r22, r28
 15a:	6c 02       	muls	r22, r28
 15c:	6c 02       	muls	r22, r28
 15e:	6c 02       	muls	r22, r28
 160:	6c 02       	muls	r22, r28
 162:	6c 02       	muls	r22, r28
 164:	6c 02       	muls	r22, r28
 166:	6c 02       	muls	r22, r28
 168:	6c 02       	muls	r22, r28
 16a:	6c 02       	muls	r22, r28
 16c:	51 02       	muls	r21, r17
 16e:	58 02       	muls	r21, r24
 170:	5f 02       	muls	r21, r31
 172:	66 02       	muls	r22, r22

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf e5       	ldi	r28, 0x5F	; 95
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	0e 94 48 01 	call	0x290	; 0x290 <main>
 184:	0c 94 92 02 	jmp	0x524	; 0x524 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <EN_pulse>:
	
	#endif
}

static void EN_pulse(){
	DIO_vwritepin(CMD_PORT,EN,1);
 18c:	41 e0       	ldi	r20, 0x01	; 1
 18e:	62 e0       	ldi	r22, 0x02	; 2
 190:	83 e4       	ldi	r24, 0x43	; 67
 192:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_vwritepin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	8f ec       	ldi	r24, 0xCF	; 207
 198:	97 e0       	ldi	r25, 0x07	; 7
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <EN_pulse+0xe>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <EN_pulse+0x14>
 1a0:	00 00       	nop
	_delay_ms(1);
	DIO_vwritepin(CMD_PORT,EN,0);
 1a2:	40 e0       	ldi	r20, 0x00	; 0
 1a4:	62 e0       	ldi	r22, 0x02	; 2
 1a6:	83 e4       	ldi	r24, 0x43	; 67
 1a8:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_vwritepin>
 1ac:	8f ec       	ldi	r24, 0xCF	; 207
 1ae:	97 e0       	ldi	r25, 0x07	; 7
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <EN_pulse+0x24>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <EN_pulse+0x2a>
 1b6:	00 00       	nop
 1b8:	08 95       	ret

000001ba <LCD_vsend_cmd>:
	_delay_ms(1);
}

void LCD_vsend_cmd(unsigned char cmd){
 1ba:	cf 93       	push	r28
 1bc:	c8 2f       	mov	r28, r24
	DIO_vwritepin(CMD_PORT,RS,0);
	EN_pulse();
	
	#elif defined _4BIT_MODE
	
	DIO_vwrite_HIGHnibble(DATA_PORT,cmd>>4);
 1be:	68 2f       	mov	r22, r24
 1c0:	62 95       	swap	r22
 1c2:	6f 70       	andi	r22, 0x0F	; 15
 1c4:	83 e4       	ldi	r24, 0x43	; 67
 1c6:	0e 94 44 02 	call	0x488	; 0x488 <DIO_vwrite_HIGHnibble>
	DIO_vwritepin(CMD_PORT,RS,0);
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	60 e0       	ldi	r22, 0x00	; 0
 1ce:	83 e4       	ldi	r24, 0x43	; 67
 1d0:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_vwritepin>
	EN_pulse();
 1d4:	0e 94 c6 00 	call	0x18c	; 0x18c <EN_pulse>
	DIO_vwrite_HIGHnibble(DATA_PORT,cmd);
 1d8:	6c 2f       	mov	r22, r28
 1da:	83 e4       	ldi	r24, 0x43	; 67
 1dc:	0e 94 44 02 	call	0x488	; 0x488 <DIO_vwrite_HIGHnibble>
	DIO_vwritepin(CMD_PORT,RS,0);
 1e0:	40 e0       	ldi	r20, 0x00	; 0
 1e2:	60 e0       	ldi	r22, 0x00	; 0
 1e4:	83 e4       	ldi	r24, 0x43	; 67
 1e6:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_vwritepin>
	EN_pulse();
 1ea:	0e 94 c6 00 	call	0x18c	; 0x18c <EN_pulse>
	
	#endif
}
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <LCD_vinit>:
 1f2:	2f ef       	ldi	r18, 0xFF	; 255
 1f4:	80 e7       	ldi	r24, 0x70	; 112
 1f6:	92 e0       	ldi	r25, 0x02	; 2
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	90 40       	sbci	r25, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <LCD_vinit+0x6>
 200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_vinit+0x10>
 202:	00 00       	nop
	LCD_vsend_cmd(ENTRY_MODE);
	_delay_ms(1);
	
	#elif defined _4BIT_MODE
	
	DIO_vsetport_dir(DATA_PORT,0xf0);
 204:	60 ef       	ldi	r22, 0xF0	; 240
 206:	83 e4       	ldi	r24, 0x43	; 67
 208:	0e 94 31 02 	call	0x462	; 0x462 <DIO_vsetport_dir>
	DIO_vsetpin_dir(CMD_PORT,RS,1);
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	60 e0       	ldi	r22, 0x00	; 0
 210:	83 e4       	ldi	r24, 0x43	; 67
 212:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_vsetpin_dir>
	DIO_vsetpin_dir(CMD_PORT,RW,1);
 216:	41 e0       	ldi	r20, 0x01	; 1
 218:	61 e0       	ldi	r22, 0x01	; 1
 21a:	83 e4       	ldi	r24, 0x43	; 67
 21c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_vsetpin_dir>
	DIO_vsetpin_dir(CMD_PORT,EN,1);
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	62 e0       	ldi	r22, 0x02	; 2
 224:	83 e4       	ldi	r24, 0x43	; 67
 226:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_vsetpin_dir>
	DIO_vwritepin(CMD_PORT,RW,0);
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	61 e0       	ldi	r22, 0x01	; 1
 22e:	83 e4       	ldi	r24, 0x43	; 67
 230:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_vwritepin>
	LCD_vsend_cmd(RETURN_HOME);
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_vsend_cmd>
 23a:	8f e0       	ldi	r24, 0x0F	; 15
 23c:	97 e2       	ldi	r25, 0x27	; 39
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <LCD_vinit+0x4c>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCD_vinit+0x52>
 244:	00 00       	nop
	_delay_ms(5);
	LCD_vsend_cmd(_4BITS);
 246:	88 e2       	ldi	r24, 0x28	; 40
 248:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_vsend_cmd>
 24c:	8f ec       	ldi	r24, 0xCF	; 207
 24e:	97 e0       	ldi	r25, 0x07	; 7
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <LCD_vinit+0x5e>
 254:	00 c0       	rjmp	.+0      	; 0x256 <LCD_vinit+0x64>
 256:	00 00       	nop
	_delay_ms(1);
	LCD_vsend_cmd(CURSOR_ON_DISPLAY_ON);
 258:	8e e0       	ldi	r24, 0x0E	; 14
 25a:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_vsend_cmd>
 25e:	8f ec       	ldi	r24, 0xCF	; 207
 260:	97 e0       	ldi	r25, 0x07	; 7
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <LCD_vinit+0x70>
 266:	00 c0       	rjmp	.+0      	; 0x268 <LCD_vinit+0x76>
 268:	00 00       	nop
	_delay_ms(1);
	LCD_vsend_cmd(CLR_SCREEN);
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_vsend_cmd>
 270:	8f e0       	ldi	r24, 0x0F	; 15
 272:	97 e2       	ldi	r25, 0x27	; 39
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <LCD_vinit+0x82>
 278:	00 c0       	rjmp	.+0      	; 0x27a <LCD_vinit+0x88>
 27a:	00 00       	nop
	_delay_ms(5);
	LCD_vsend_cmd(ENTRY_MODE);
 27c:	86 e0       	ldi	r24, 0x06	; 6
 27e:	0e 94 dd 00 	call	0x1ba	; 0x1ba <LCD_vsend_cmd>
 282:	8f ec       	ldi	r24, 0xCF	; 207
 284:	97 e0       	ldi	r25, 0x07	; 7
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <LCD_vinit+0x94>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <LCD_vinit+0x9a>
 28c:	00 00       	nop
 28e:	08 95       	ret

00000290 <main>:
#include "HAL/LcdDriver/LCD.h"


int main(void)
{
    USART_vinit(9600);
 290:	60 e8       	ldi	r22, 0x80	; 128
 292:	75 e2       	ldi	r23, 0x25	; 37
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 6d 02 	call	0x4da	; 0x4da <USART_vinit>
    LCD_vinit();
 29c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_vinit>
 2a0:	ff cf       	rjmp	.-2      	; 0x2a0 <main+0x10>

000002a2 <DIO_vsetpin_dir>:
			PORTC&=0xf0;
			PORTC|=value;
			break;
		case 'D':
			PORTD&=0xf0;
			PORTD|=value;
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	fc 01       	movw	r30, r24
 2a6:	e1 54       	subi	r30, 0x41	; 65
 2a8:	f1 09       	sbc	r31, r1
 2aa:	e4 32       	cpi	r30, 0x24	; 36
 2ac:	f1 05       	cpc	r31, r1
 2ae:	08 f0       	brcs	.+2      	; 0x2b2 <DIO_vsetpin_dir+0x10>
 2b0:	67 c0       	rjmp	.+206    	; 0x380 <DIO_vsetpin_dir+0xde>
 2b2:	e6 5d       	subi	r30, 0xD6	; 214
 2b4:	ff 4f       	sbci	r31, 0xFF	; 255
 2b6:	0c 94 8c 02 	jmp	0x518	; 0x518 <__tablejump2__>
 2ba:	41 11       	cpse	r20, r1
 2bc:	0c c0       	rjmp	.+24     	; 0x2d6 <DIO_vsetpin_dir+0x34>
 2be:	2a b3       	in	r18, 0x1a	; 26
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <DIO_vsetpin_dir+0x28>
 2c6:	88 0f       	add	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <DIO_vsetpin_dir+0x24>
 2ce:	80 95       	com	r24
 2d0:	82 23       	and	r24, r18
 2d2:	8a bb       	out	0x1a, r24	; 26
 2d4:	08 95       	ret
 2d6:	2a b3       	in	r18, 0x1a	; 26
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_vsetpin_dir+0x40>
 2de:	88 0f       	add	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	6a 95       	dec	r22
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_vsetpin_dir+0x3c>
 2e6:	82 2b       	or	r24, r18
 2e8:	8a bb       	out	0x1a, r24	; 26
 2ea:	08 95       	ret
 2ec:	41 11       	cpse	r20, r1
 2ee:	0c c0       	rjmp	.+24     	; 0x308 <DIO_vsetpin_dir+0x66>
 2f0:	27 b3       	in	r18, 0x17	; 23
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <DIO_vsetpin_dir+0x5a>
 2f8:	88 0f       	add	r24, r24
 2fa:	99 1f       	adc	r25, r25
 2fc:	6a 95       	dec	r22
 2fe:	e2 f7       	brpl	.-8      	; 0x2f8 <DIO_vsetpin_dir+0x56>
 300:	80 95       	com	r24
 302:	82 23       	and	r24, r18
 304:	87 bb       	out	0x17, r24	; 23
 306:	08 95       	ret
 308:	27 b3       	in	r18, 0x17	; 23
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	02 c0       	rjmp	.+4      	; 0x314 <DIO_vsetpin_dir+0x72>
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	6a 95       	dec	r22
 316:	e2 f7       	brpl	.-8      	; 0x310 <DIO_vsetpin_dir+0x6e>
 318:	82 2b       	or	r24, r18
 31a:	87 bb       	out	0x17, r24	; 23
 31c:	08 95       	ret
 31e:	41 11       	cpse	r20, r1
 320:	0c c0       	rjmp	.+24     	; 0x33a <DIO_vsetpin_dir+0x98>
 322:	24 b3       	in	r18, 0x14	; 20
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_vsetpin_dir+0x8c>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	6a 95       	dec	r22
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_vsetpin_dir+0x88>
 332:	80 95       	com	r24
 334:	82 23       	and	r24, r18
 336:	84 bb       	out	0x14, r24	; 20
 338:	08 95       	ret
 33a:	24 b3       	in	r18, 0x14	; 20
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	02 c0       	rjmp	.+4      	; 0x346 <DIO_vsetpin_dir+0xa4>
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	6a 95       	dec	r22
 348:	e2 f7       	brpl	.-8      	; 0x342 <DIO_vsetpin_dir+0xa0>
 34a:	82 2b       	or	r24, r18
 34c:	84 bb       	out	0x14, r24	; 20
 34e:	08 95       	ret
 350:	41 11       	cpse	r20, r1
 352:	0c c0       	rjmp	.+24     	; 0x36c <DIO_vsetpin_dir+0xca>
 354:	21 b3       	in	r18, 0x11	; 17
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_vsetpin_dir+0xbe>
 35c:	88 0f       	add	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	6a 95       	dec	r22
 362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_vsetpin_dir+0xba>
 364:	80 95       	com	r24
 366:	82 23       	and	r24, r18
 368:	81 bb       	out	0x11, r24	; 17
 36a:	08 95       	ret
 36c:	21 b3       	in	r18, 0x11	; 17
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_vsetpin_dir+0xd6>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	6a 95       	dec	r22
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_vsetpin_dir+0xd2>
 37c:	82 2b       	or	r24, r18
 37e:	81 bb       	out	0x11, r24	; 17
 380:	08 95       	ret

00000382 <DIO_vwritepin>:
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	fc 01       	movw	r30, r24
 386:	e1 54       	subi	r30, 0x41	; 65
 388:	f1 09       	sbc	r31, r1
 38a:	e4 32       	cpi	r30, 0x24	; 36
 38c:	f1 05       	cpc	r31, r1
 38e:	08 f0       	brcs	.+2      	; 0x392 <DIO_vwritepin+0x10>
 390:	67 c0       	rjmp	.+206    	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 392:	e2 5b       	subi	r30, 0xB2	; 178
 394:	ff 4f       	sbci	r31, 0xFF	; 255
 396:	0c 94 8c 02 	jmp	0x518	; 0x518 <__tablejump2__>
 39a:	41 11       	cpse	r20, r1
 39c:	0c c0       	rjmp	.+24     	; 0x3b6 <DIO_vwritepin+0x34>
 39e:	2b b3       	in	r18, 0x1b	; 27
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_vwritepin+0x28>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	6a 95       	dec	r22
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_vwritepin+0x24>
 3ae:	80 95       	com	r24
 3b0:	82 23       	and	r24, r18
 3b2:	8b bb       	out	0x1b, r24	; 27
 3b4:	08 95       	ret
 3b6:	2b b3       	in	r18, 0x1b	; 27
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_vwritepin+0x40>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_vwritepin+0x3c>
 3c6:	82 2b       	or	r24, r18
 3c8:	8b bb       	out	0x1b, r24	; 27
 3ca:	08 95       	ret
 3cc:	41 11       	cpse	r20, r1
 3ce:	0c c0       	rjmp	.+24     	; 0x3e8 <DIO_vwritepin+0x66>
 3d0:	28 b3       	in	r18, 0x18	; 24
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DIO_vwritepin+0x5a>
 3d8:	88 0f       	add	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	6a 95       	dec	r22
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DIO_vwritepin+0x56>
 3e0:	80 95       	com	r24
 3e2:	82 23       	and	r24, r18
 3e4:	88 bb       	out	0x18, r24	; 24
 3e6:	08 95       	ret
 3e8:	28 b3       	in	r18, 0x18	; 24
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <DIO_vwritepin+0x72>
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	6a 95       	dec	r22
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <DIO_vwritepin+0x6e>
 3f8:	82 2b       	or	r24, r18
 3fa:	88 bb       	out	0x18, r24	; 24
 3fc:	08 95       	ret
 3fe:	41 11       	cpse	r20, r1
 400:	0c c0       	rjmp	.+24     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 402:	25 b3       	in	r18, 0x15	; 21
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 c0       	rjmp	.+4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	6a 95       	dec	r22
 410:	e2 f7       	brpl	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 412:	80 95       	com	r24
 414:	82 23       	and	r24, r18
 416:	85 bb       	out	0x15, r24	; 21
 418:	08 95       	ret
 41a:	25 b3       	in	r18, 0x15	; 21
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 c0       	rjmp	.+4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	6a 95       	dec	r22
 428:	e2 f7       	brpl	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	82 2b       	or	r24, r18
 42c:	85 bb       	out	0x15, r24	; 21
 42e:	08 95       	ret
 430:	41 11       	cpse	r20, r1
 432:	0c c0       	rjmp	.+24     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 434:	22 b3       	in	r18, 0x12	; 18
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43c:	88 0f       	add	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	6a 95       	dec	r22
 442:	e2 f7       	brpl	.-8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 444:	80 95       	com	r24
 446:	82 23       	and	r24, r18
 448:	82 bb       	out	0x12, r24	; 18
 44a:	08 95       	ret
 44c:	22 b3       	in	r18, 0x12	; 18
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 c0       	rjmp	.+4      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	6a 95       	dec	r22
 45a:	e2 f7       	brpl	.-8      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 45c:	82 2b       	or	r24, r18
 45e:	82 bb       	out	0x12, r24	; 18
 460:	08 95       	ret

00000462 <DIO_vsetport_dir>:
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	fc 01       	movw	r30, r24
 466:	e1 54       	subi	r30, 0x41	; 65
 468:	f1 09       	sbc	r31, r1
 46a:	e4 32       	cpi	r30, 0x24	; 36
 46c:	f1 05       	cpc	r31, r1
 46e:	58 f4       	brcc	.+22     	; 0x486 <DIO_vsetport_dir+0x24>
 470:	ee 58       	subi	r30, 0x8E	; 142
 472:	ff 4f       	sbci	r31, 0xFF	; 255
 474:	0c 94 8c 02 	jmp	0x518	; 0x518 <__tablejump2__>
 478:	6a bb       	out	0x1a, r22	; 26
 47a:	08 95       	ret
 47c:	67 bb       	out	0x17, r22	; 23
 47e:	08 95       	ret
 480:	64 bb       	out	0x14, r22	; 20
 482:	08 95       	ret
 484:	61 bb       	out	0x11, r22	; 17
 486:	08 95       	ret

00000488 <DIO_vwrite_HIGHnibble>:
			break;
	}
}

void DIO_vwrite_HIGHnibble(unsigned char port,unsigned char value){
	value<<=4;
 488:	62 95       	swap	r22
 48a:	60 7f       	andi	r22, 0xF0	; 240
	switch(port)
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	fc 01       	movw	r30, r24
 490:	e1 54       	subi	r30, 0x41	; 65
 492:	f1 09       	sbc	r31, r1
 494:	e4 32       	cpi	r30, 0x24	; 36
 496:	f1 05       	cpc	r31, r1
 498:	f8 f4       	brcc	.+62     	; 0x4d8 <DIO_vwrite_HIGHnibble+0x50>
 49a:	ea 56       	subi	r30, 0x6A	; 106
 49c:	ff 4f       	sbci	r31, 0xFF	; 255
 49e:	0c 94 8c 02 	jmp	0x518	; 0x518 <__tablejump2__>
	{
		case 'A':
		case 'a':
			PORTA&=0x0f;
 4a2:	8b b3       	in	r24, 0x1b	; 27
 4a4:	8f 70       	andi	r24, 0x0F	; 15
 4a6:	8b bb       	out	0x1b, r24	; 27
			PORTA|=value;
 4a8:	8b b3       	in	r24, 0x1b	; 27
 4aa:	68 2b       	or	r22, r24
 4ac:	6b bb       	out	0x1b, r22	; 27
			break;
 4ae:	08 95       	ret
		case 'B':
		case 'b':
			PORTB&=0x0f;
 4b0:	88 b3       	in	r24, 0x18	; 24
 4b2:	8f 70       	andi	r24, 0x0F	; 15
 4b4:	88 bb       	out	0x18, r24	; 24
			PORTB|=value;
 4b6:	88 b3       	in	r24, 0x18	; 24
 4b8:	68 2b       	or	r22, r24
 4ba:	68 bb       	out	0x18, r22	; 24
			break;
 4bc:	08 95       	ret
		case 'C':
		case 'c':
			PORTC&=0x0f;
 4be:	85 b3       	in	r24, 0x15	; 21
 4c0:	8f 70       	andi	r24, 0x0F	; 15
 4c2:	85 bb       	out	0x15, r24	; 21
			PORTC|=value;
 4c4:	85 b3       	in	r24, 0x15	; 21
 4c6:	68 2b       	or	r22, r24
 4c8:	65 bb       	out	0x15, r22	; 21
			break;
 4ca:	08 95       	ret
		case 'D':
		case 'd':
			PORTD&=0x0f;
 4cc:	82 b3       	in	r24, 0x12	; 18
 4ce:	8f 70       	andi	r24, 0x0F	; 15
 4d0:	82 bb       	out	0x12, r24	; 18
			PORTD|=value;
 4d2:	82 b3       	in	r24, 0x12	; 18
 4d4:	68 2b       	or	r22, r24
 4d6:	62 bb       	out	0x12, r22	; 18
 4d8:	08 95       	ret

000004da <USART_vinit>:

#include "USART.h"

void USART_vinit(unsigned long baud){
	//Choose baud rate
	unsigned short UBRR=(F_CPU/16*baud)-1;
 4da:	20 e2       	ldi	r18, 0x20	; 32
 4dc:	31 ea       	ldi	r19, 0xA1	; 161
 4de:	62 9f       	mul	r22, r18
 4e0:	a0 01       	movw	r20, r0
 4e2:	63 9f       	mul	r22, r19
 4e4:	50 0d       	add	r21, r0
 4e6:	72 9f       	mul	r23, r18
 4e8:	50 0d       	add	r21, r0
 4ea:	11 24       	eor	r1, r1
 4ec:	ca 01       	movw	r24, r20
 4ee:	01 97       	sbiw	r24, 0x01	; 1
	UBRRH=(unsigned char)(UBRR>>8);
 4f0:	90 bd       	out	0x20, r25	; 32
	UBRRL=(unsigned char)UBRR;
 4f2:	89 b9       	out	0x09, r24	; 9
	//Enable USART Sender and Receiver
	SET_BIT(UCSRB,TXEN);
 4f4:	8a b1       	in	r24, 0x0a	; 10
 4f6:	88 60       	ori	r24, 0x08	; 8
 4f8:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB,RXEN);
 4fa:	8a b1       	in	r24, 0x0a	; 10
 4fc:	80 61       	ori	r24, 0x10	; 16
 4fe:	8a b9       	out	0x0a, r24	; 10
	//Choose data length, parity and stop bits from UCSRC
	UCSRC=(1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1); //Default: 8bit data, 1 stop bit and no parity bits
 500:	86 e8       	ldi	r24, 0x86	; 134
 502:	80 bd       	out	0x20, r24	; 32
 504:	2f ef       	ldi	r18, 0xFF	; 255
 506:	82 e5       	ldi	r24, 0x52	; 82
 508:	97 e0       	ldi	r25, 0x07	; 7
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <USART_vinit+0x30>
 512:	00 c0       	rjmp	.+0      	; 0x514 <USART_vinit+0x3a>
 514:	00 00       	nop
 516:	08 95       	ret

00000518 <__tablejump2__>:
 518:	ee 0f       	add	r30, r30
 51a:	ff 1f       	adc	r31, r31
 51c:	05 90       	lpm	r0, Z+
 51e:	f4 91       	lpm	r31, Z
 520:	e0 2d       	mov	r30, r0
 522:	09 94       	ijmp

00000524 <_exit>:
 524:	f8 94       	cli

00000526 <__stop_program>:
 526:	ff cf       	rjmp	.-2      	; 0x526 <__stop_program>

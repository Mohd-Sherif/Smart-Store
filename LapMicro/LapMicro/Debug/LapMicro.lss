
LapMicro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000af2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000af2  00000b86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000068  00800064  00800064  00000b8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00000bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018e0  00000000  00000000  00000e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c73  00000000  00000000  000026e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001365  00000000  00000000  00003353  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000454  00000000  00000000  000046b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000726  00000000  00000000  00004b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017de  00000000  00000000  00005232  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00006a10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__ctors_end>
   4:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__vector_1>
   8:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
   c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  10:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  14:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  18:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  1c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  20:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  24:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  28:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  2c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  30:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  34:	0c 94 10 02 	jmp	0x420	; 0x420 <__vector_13>
  38:	0c 94 06 02 	jmp	0x40c	; 0x40c <__vector_14>
  3c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  40:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  44:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  48:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  4c:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  50:	0c 94 43 01 	jmp	0x286	; 0x286 <__bad_interrupt>
  54:	54 01       	movw	r10, r8
  56:	5f 01       	movw	r10, r30
  58:	6a 01       	movw	r12, r20
  5a:	75 01       	movw	r14, r10
  5c:	7f 01       	movw	r14, r30
  5e:	7f 01       	movw	r14, r30
  60:	7f 01       	movw	r14, r30
  62:	7f 01       	movw	r14, r30
  64:	7f 01       	movw	r14, r30
  66:	7f 01       	movw	r14, r30
  68:	7f 01       	movw	r14, r30
  6a:	7f 01       	movw	r14, r30
  6c:	7f 01       	movw	r14, r30
  6e:	7f 01       	movw	r14, r30
  70:	7f 01       	movw	r14, r30
  72:	7f 01       	movw	r14, r30
  74:	7f 01       	movw	r14, r30
  76:	7f 01       	movw	r14, r30
  78:	7f 01       	movw	r14, r30
  7a:	7f 01       	movw	r14, r30
  7c:	7f 01       	movw	r14, r30
  7e:	7f 01       	movw	r14, r30
  80:	7f 01       	movw	r14, r30
  82:	7f 01       	movw	r14, r30
  84:	7f 01       	movw	r14, r30
  86:	7f 01       	movw	r14, r30
  88:	7f 01       	movw	r14, r30
  8a:	7f 01       	movw	r14, r30
  8c:	7f 01       	movw	r14, r30
  8e:	7f 01       	movw	r14, r30
  90:	7f 01       	movw	r14, r30
  92:	7f 01       	movw	r14, r30
  94:	54 01       	movw	r10, r8
  96:	5f 01       	movw	r10, r30
  98:	6a 01       	movw	r12, r20
  9a:	75 01       	movw	r14, r10
  9c:	a8 02       	muls	r26, r24
  9e:	c1 02       	muls	r28, r17
  a0:	da 02       	muls	r29, r26
  a2:	f3 02       	muls	r31, r19
  a4:	0b 03       	fmul	r16, r19
  a6:	0b 03       	fmul	r16, r19
  a8:	0b 03       	fmul	r16, r19
  aa:	0b 03       	fmul	r16, r19
  ac:	0b 03       	fmul	r16, r19
  ae:	0b 03       	fmul	r16, r19
  b0:	0b 03       	fmul	r16, r19
  b2:	0b 03       	fmul	r16, r19
  b4:	0b 03       	fmul	r16, r19
  b6:	0b 03       	fmul	r16, r19
  b8:	0b 03       	fmul	r16, r19
  ba:	0b 03       	fmul	r16, r19
  bc:	0b 03       	fmul	r16, r19
  be:	0b 03       	fmul	r16, r19
  c0:	0b 03       	fmul	r16, r19
  c2:	0b 03       	fmul	r16, r19
  c4:	0b 03       	fmul	r16, r19
  c6:	0b 03       	fmul	r16, r19
  c8:	0b 03       	fmul	r16, r19
  ca:	0b 03       	fmul	r16, r19
  cc:	0b 03       	fmul	r16, r19
  ce:	0b 03       	fmul	r16, r19
  d0:	0b 03       	fmul	r16, r19
  d2:	0b 03       	fmul	r16, r19
  d4:	0b 03       	fmul	r16, r19
  d6:	0b 03       	fmul	r16, r19
  d8:	0b 03       	fmul	r16, r19
  da:	0b 03       	fmul	r16, r19
  dc:	a8 02       	muls	r26, r24
  de:	c1 02       	muls	r28, r17
  e0:	da 02       	muls	r29, r26
  e2:	f3 02       	muls	r31, r19
  e4:	18 03       	fmul	r17, r16
  e6:	31 03       	mulsu	r19, r17
  e8:	4a 03       	fmul	r20, r18
  ea:	63 03       	mulsu	r22, r19
  ec:	7b 03       	fmul	r23, r19
  ee:	7b 03       	fmul	r23, r19
  f0:	7b 03       	fmul	r23, r19
  f2:	7b 03       	fmul	r23, r19
  f4:	7b 03       	fmul	r23, r19
  f6:	7b 03       	fmul	r23, r19
  f8:	7b 03       	fmul	r23, r19
  fa:	7b 03       	fmul	r23, r19
  fc:	7b 03       	fmul	r23, r19
  fe:	7b 03       	fmul	r23, r19
 100:	7b 03       	fmul	r23, r19
 102:	7b 03       	fmul	r23, r19
 104:	7b 03       	fmul	r23, r19
 106:	7b 03       	fmul	r23, r19
 108:	7b 03       	fmul	r23, r19
 10a:	7b 03       	fmul	r23, r19
 10c:	7b 03       	fmul	r23, r19
 10e:	7b 03       	fmul	r23, r19
 110:	7b 03       	fmul	r23, r19
 112:	7b 03       	fmul	r23, r19
 114:	7b 03       	fmul	r23, r19
 116:	7b 03       	fmul	r23, r19
 118:	7b 03       	fmul	r23, r19
 11a:	7b 03       	fmul	r23, r19
 11c:	7b 03       	fmul	r23, r19
 11e:	7b 03       	fmul	r23, r19
 120:	7b 03       	fmul	r23, r19
 122:	7b 03       	fmul	r23, r19
 124:	18 03       	fmul	r17, r16
 126:	31 03       	mulsu	r19, r17
 128:	4a 03       	fmul	r20, r18
 12a:	63 03       	mulsu	r22, r19
 12c:	87 03       	fmuls	r16, r23
 12e:	8e 03       	fmulsu	r16, r22
 130:	95 03       	fmuls	r17, r21
 132:	9c 03       	fmulsu	r17, r20
 134:	a2 03       	fmuls	r18, r18
 136:	a2 03       	fmuls	r18, r18
 138:	a2 03       	fmuls	r18, r18
 13a:	a2 03       	fmuls	r18, r18
 13c:	a2 03       	fmuls	r18, r18
 13e:	a2 03       	fmuls	r18, r18
 140:	a2 03       	fmuls	r18, r18
 142:	a2 03       	fmuls	r18, r18
 144:	a2 03       	fmuls	r18, r18
 146:	a2 03       	fmuls	r18, r18
 148:	a2 03       	fmuls	r18, r18
 14a:	a2 03       	fmuls	r18, r18
 14c:	a2 03       	fmuls	r18, r18
 14e:	a2 03       	fmuls	r18, r18
 150:	a2 03       	fmuls	r18, r18
 152:	a2 03       	fmuls	r18, r18
 154:	a2 03       	fmuls	r18, r18
 156:	a2 03       	fmuls	r18, r18
 158:	a2 03       	fmuls	r18, r18
 15a:	a2 03       	fmuls	r18, r18
 15c:	a2 03       	fmuls	r18, r18
 15e:	a2 03       	fmuls	r18, r18
 160:	a2 03       	fmuls	r18, r18
 162:	a2 03       	fmuls	r18, r18
 164:	a2 03       	fmuls	r18, r18
 166:	a2 03       	fmuls	r18, r18
 168:	a2 03       	fmuls	r18, r18
 16a:	a2 03       	fmuls	r18, r18
 16c:	87 03       	fmuls	r16, r23
 16e:	8e 03       	fmulsu	r16, r22
 170:	95 03       	fmuls	r17, r21
 172:	9c 03       	fmulsu	r17, r20
 174:	ae 03       	fmulsu	r18, r22
 176:	b0 03       	fmuls	r19, r16
 178:	b2 03       	fmuls	r19, r18
 17a:	b4 03       	fmuls	r19, r20
 17c:	b5 03       	fmuls	r19, r21
 17e:	b5 03       	fmuls	r19, r21
 180:	b5 03       	fmuls	r19, r21
 182:	b5 03       	fmuls	r19, r21
 184:	b5 03       	fmuls	r19, r21
 186:	b5 03       	fmuls	r19, r21
 188:	b5 03       	fmuls	r19, r21
 18a:	b5 03       	fmuls	r19, r21
 18c:	b5 03       	fmuls	r19, r21
 18e:	b5 03       	fmuls	r19, r21
 190:	b5 03       	fmuls	r19, r21
 192:	b5 03       	fmuls	r19, r21
 194:	b5 03       	fmuls	r19, r21
 196:	b5 03       	fmuls	r19, r21
 198:	b5 03       	fmuls	r19, r21
 19a:	b5 03       	fmuls	r19, r21
 19c:	b5 03       	fmuls	r19, r21
 19e:	b5 03       	fmuls	r19, r21
 1a0:	b5 03       	fmuls	r19, r21
 1a2:	b5 03       	fmuls	r19, r21
 1a4:	b5 03       	fmuls	r19, r21
 1a6:	b5 03       	fmuls	r19, r21
 1a8:	b5 03       	fmuls	r19, r21
 1aa:	b5 03       	fmuls	r19, r21
 1ac:	b5 03       	fmuls	r19, r21
 1ae:	b5 03       	fmuls	r19, r21
 1b0:	b5 03       	fmuls	r19, r21
 1b2:	b5 03       	fmuls	r19, r21
 1b4:	ae 03       	fmulsu	r18, r22
 1b6:	b0 03       	fmuls	r19, r16
 1b8:	b2 03       	fmuls	r19, r18
 1ba:	b4 03       	fmuls	r19, r20
 1bc:	c2 03       	fmuls	r20, r18
 1be:	db 03       	fmulsu	r21, r19
 1c0:	f4 03       	fmuls	r23, r20
 1c2:	0d 04       	cpc	r0, r13
 1c4:	25 04       	cpc	r2, r5
 1c6:	25 04       	cpc	r2, r5
 1c8:	25 04       	cpc	r2, r5
 1ca:	25 04       	cpc	r2, r5
 1cc:	25 04       	cpc	r2, r5
 1ce:	25 04       	cpc	r2, r5
 1d0:	25 04       	cpc	r2, r5
 1d2:	25 04       	cpc	r2, r5
 1d4:	25 04       	cpc	r2, r5
 1d6:	25 04       	cpc	r2, r5
 1d8:	25 04       	cpc	r2, r5
 1da:	25 04       	cpc	r2, r5
 1dc:	25 04       	cpc	r2, r5
 1de:	25 04       	cpc	r2, r5
 1e0:	25 04       	cpc	r2, r5
 1e2:	25 04       	cpc	r2, r5
 1e4:	25 04       	cpc	r2, r5
 1e6:	25 04       	cpc	r2, r5
 1e8:	25 04       	cpc	r2, r5
 1ea:	25 04       	cpc	r2, r5
 1ec:	25 04       	cpc	r2, r5
 1ee:	25 04       	cpc	r2, r5
 1f0:	25 04       	cpc	r2, r5
 1f2:	25 04       	cpc	r2, r5
 1f4:	25 04       	cpc	r2, r5
 1f6:	25 04       	cpc	r2, r5
 1f8:	25 04       	cpc	r2, r5
 1fa:	25 04       	cpc	r2, r5
 1fc:	c2 03       	fmuls	r20, r18
 1fe:	db 03       	fmulsu	r21, r19
 200:	f4 03       	fmuls	r23, r20
 202:	0d 04       	cpc	r0, r13
 204:	32 04       	cpc	r3, r2
 206:	4b 04       	cpc	r4, r11
 208:	64 04       	cpc	r6, r4
 20a:	7d 04       	cpc	r7, r13
 20c:	95 04       	cpc	r9, r5
 20e:	95 04       	cpc	r9, r5
 210:	95 04       	cpc	r9, r5
 212:	95 04       	cpc	r9, r5
 214:	95 04       	cpc	r9, r5
 216:	95 04       	cpc	r9, r5
 218:	95 04       	cpc	r9, r5
 21a:	95 04       	cpc	r9, r5
 21c:	95 04       	cpc	r9, r5
 21e:	95 04       	cpc	r9, r5
 220:	95 04       	cpc	r9, r5
 222:	95 04       	cpc	r9, r5
 224:	95 04       	cpc	r9, r5
 226:	95 04       	cpc	r9, r5
 228:	95 04       	cpc	r9, r5
 22a:	95 04       	cpc	r9, r5
 22c:	95 04       	cpc	r9, r5
 22e:	95 04       	cpc	r9, r5
 230:	95 04       	cpc	r9, r5
 232:	95 04       	cpc	r9, r5
 234:	95 04       	cpc	r9, r5
 236:	95 04       	cpc	r9, r5
 238:	95 04       	cpc	r9, r5
 23a:	95 04       	cpc	r9, r5
 23c:	95 04       	cpc	r9, r5
 23e:	95 04       	cpc	r9, r5
 240:	95 04       	cpc	r9, r5
 242:	95 04       	cpc	r9, r5
 244:	32 04       	cpc	r3, r2
 246:	4b 04       	cpc	r4, r11
 248:	64 04       	cpc	r6, r4
 24a:	7d 04       	cpc	r7, r13

0000024c <__ctors_end>:
 24c:	11 24       	eor	r1, r1
 24e:	1f be       	out	0x3f, r1	; 63
 250:	cf e5       	ldi	r28, 0x5F	; 95
 252:	d8 e0       	ldi	r29, 0x08	; 8
 254:	de bf       	out	0x3e, r29	; 62
 256:	cd bf       	out	0x3d, r28	; 61

00000258 <__do_copy_data>:
 258:	10 e0       	ldi	r17, 0x00	; 0
 25a:	a0 e6       	ldi	r26, 0x60	; 96
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	e2 ef       	ldi	r30, 0xF2	; 242
 260:	fa e0       	ldi	r31, 0x0A	; 10
 262:	02 c0       	rjmp	.+4      	; 0x268 <__do_copy_data+0x10>
 264:	05 90       	lpm	r0, Z+
 266:	0d 92       	st	X+, r0
 268:	a4 36       	cpi	r26, 0x64	; 100
 26a:	b1 07       	cpc	r27, r17
 26c:	d9 f7       	brne	.-10     	; 0x264 <__do_copy_data+0xc>

0000026e <__do_clear_bss>:
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	a4 e6       	ldi	r26, 0x64	; 100
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	01 c0       	rjmp	.+2      	; 0x278 <.do_clear_bss_start>

00000276 <.do_clear_bss_loop>:
 276:	1d 92       	st	X+, r1

00000278 <.do_clear_bss_start>:
 278:	ac 3c       	cpi	r26, 0xCC	; 204
 27a:	b2 07       	cpc	r27, r18
 27c:	e1 f7       	brne	.-8      	; 0x276 <.do_clear_bss_loop>
 27e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
 282:	0c 94 77 05 	jmp	0xaee	; 0xaee <_exit>

00000286 <__bad_interrupt>:
 286:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000028a <ButtonInit>:
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	0e 94 9c 02 	call	0x538	; 0x538 <setPinDirection>
 290:	08 95       	ret

00000292 <connectPullup>:
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	fc 01       	movw	r30, r24
 296:	e1 54       	subi	r30, 0x41	; 65
 298:	f1 09       	sbc	r31, r1
 29a:	e4 32       	cpi	r30, 0x24	; 36
 29c:	f1 05       	cpc	r31, r1
 29e:	78 f5       	brcc	.+94     	; 0x2fe <connectPullup+0x6c>
 2a0:	e6 5d       	subi	r30, 0xD6	; 214
 2a2:	ff 4f       	sbci	r31, 0xFF	; 255
 2a4:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 2a8:	2b b3       	in	r18, 0x1b	; 27
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <connectPullup+0x22>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	6a 95       	dec	r22
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <connectPullup+0x1e>
 2b8:	82 2b       	or	r24, r18
 2ba:	8b bb       	out	0x1b, r24	; 27
 2bc:	08 95       	ret
 2be:	28 b3       	in	r18, 0x18	; 24
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <connectPullup+0x38>
 2c6:	88 0f       	add	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <connectPullup+0x34>
 2ce:	82 2b       	or	r24, r18
 2d0:	88 bb       	out	0x18, r24	; 24
 2d2:	08 95       	ret
 2d4:	25 b3       	in	r18, 0x15	; 21
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <connectPullup+0x4e>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <connectPullup+0x4a>
 2e4:	82 2b       	or	r24, r18
 2e6:	85 bb       	out	0x15, r24	; 21
 2e8:	08 95       	ret
 2ea:	22 b3       	in	r18, 0x12	; 18
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <connectPullup+0x64>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <connectPullup+0x60>
 2fa:	82 2b       	or	r24, r18
 2fc:	82 bb       	out	0x12, r24	; 18
 2fe:	08 95       	ret

00000300 <sendPulse>:
 300:	41 e0       	ldi	r20, 0x01	; 1
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	82 e6       	ldi	r24, 0x62	; 98
 306:	0e 94 0c 03 	call	0x618	; 0x618 <writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30a:	8f e9       	ldi	r24, 0x9F	; 159
 30c:	9f e0       	ldi	r25, 0x0F	; 15
 30e:	01 97       	sbiw	r24, 0x01	; 1
 310:	f1 f7       	brne	.-4      	; 0x30e <sendPulse+0xe>
 312:	00 c0       	rjmp	.+0      	; 0x314 <sendPulse+0x14>
 314:	00 00       	nop
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	82 e6       	ldi	r24, 0x62	; 98
 31c:	0e 94 0c 03 	call	0x618	; 0x618 <writePin>
 320:	8f e9       	ldi	r24, 0x9F	; 159
 322:	9f e0       	ldi	r25, 0x0F	; 15
 324:	01 97       	sbiw	r24, 0x01	; 1
 326:	f1 f7       	brne	.-4      	; 0x324 <sendPulse+0x24>
 328:	00 c0       	rjmp	.+0      	; 0x32a <sendPulse+0x2a>
 32a:	00 00       	nop
 32c:	08 95       	ret

0000032e <sendCMD>:
 32e:	98 2f       	mov	r25, r24
 330:	86 2f       	mov	r24, r22
 332:	69 2f       	mov	r22, r25
 334:	0e 94 a3 03 	call	0x746	; 0x746 <setPort>
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	61 e0       	ldi	r22, 0x01	; 1
 33c:	82 e6       	ldi	r24, 0x62	; 98
 33e:	0e 94 0c 03 	call	0x618	; 0x618 <writePin>
 342:	0e 94 80 01 	call	0x300	; 0x300 <sendPulse>
 346:	08 95       	ret

00000348 <LCD_init>:
 348:	cf 93       	push	r28
 34a:	c8 2f       	mov	r28, r24
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	81 ee       	ldi	r24, 0xE1	; 225
 350:	94 e0       	ldi	r25, 0x04	; 4
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <LCD_init+0xa>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <LCD_init+0x14>
 35c:	00 00       	nop
 35e:	6f ef       	ldi	r22, 0xFF	; 255
 360:	8c 2f       	mov	r24, r28
 362:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <setPortDirection>
 366:	41 e0       	ldi	r20, 0x01	; 1
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	82 e6       	ldi	r24, 0x62	; 98
 36c:	0e 94 9c 02 	call	0x538	; 0x538 <setPinDirection>
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	61 e0       	ldi	r22, 0x01	; 1
 374:	82 e6       	ldi	r24, 0x62	; 98
 376:	0e 94 9c 02 	call	0x538	; 0x538 <setPinDirection>
 37a:	6c 2f       	mov	r22, r28
 37c:	88 e3       	ldi	r24, 0x38	; 56
 37e:	0e 94 97 01 	call	0x32e	; 0x32e <sendCMD>
 382:	8f ec       	ldi	r24, 0xCF	; 207
 384:	97 e0       	ldi	r25, 0x07	; 7
 386:	01 97       	sbiw	r24, 0x01	; 1
 388:	f1 f7       	brne	.-4      	; 0x386 <LCD_init+0x3e>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <LCD_init+0x44>
 38c:	00 00       	nop
 38e:	6c 2f       	mov	r22, r28
 390:	8f e0       	ldi	r24, 0x0F	; 15
 392:	0e 94 97 01 	call	0x32e	; 0x32e <sendCMD>
 396:	8f ec       	ldi	r24, 0xCF	; 207
 398:	97 e0       	ldi	r25, 0x07	; 7
 39a:	01 97       	sbiw	r24, 0x01	; 1
 39c:	f1 f7       	brne	.-4      	; 0x39a <LCD_init+0x52>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <LCD_init+0x58>
 3a0:	00 00       	nop
 3a2:	6c 2f       	mov	r22, r28
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	0e 94 97 01 	call	0x32e	; 0x32e <sendCMD>
 3aa:	8f e1       	ldi	r24, 0x1F	; 31
 3ac:	9e e4       	ldi	r25, 0x4E	; 78
 3ae:	01 97       	sbiw	r24, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <LCD_init+0x66>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <LCD_init+0x6c>
 3b4:	00 00       	nop
 3b6:	6c 2f       	mov	r22, r28
 3b8:	86 e0       	ldi	r24, 0x06	; 6
 3ba:	0e 94 97 01 	call	0x32e	; 0x32e <sendCMD>
 3be:	8f ec       	ldi	r24, 0xCF	; 207
 3c0:	97 e0       	ldi	r25, 0x07	; 7
 3c2:	01 97       	sbiw	r24, 0x01	; 1
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_init+0x7a>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCD_init+0x80>
 3c8:	00 00       	nop
 3ca:	cf 91       	pop	r28
 3cc:	08 95       	ret

000003ce <main>:

volatile int testArray[2] = {200, 201};
 
int main(void)
{
	sei();
 3ce:	78 94       	sei
	LCD_init('c');
 3d0:	83 e6       	ldi	r24, 0x63	; 99
 3d2:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_init>
	UART_init(9600);
 3d6:	20 e8       	ldi	r18, 0x80	; 128
 3d8:	35 e2       	ldi	r19, 0x25	; 37
 3da:	40 e0       	ldi	r20, 0x00	; 0
 3dc:	50 e0       	ldi	r21, 0x00	; 0
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	0e 94 c1 04 	call	0x982	; 0x982 <UART_init>
	
	GICR |= (1 << INT0);
 3ea:	8b b7       	in	r24, 0x3b	; 59
 3ec:	80 64       	ori	r24, 0x40	; 64
 3ee:	8b bf       	out	0x3b, r24	; 59
	MCUCR |= (1 << ISC01);
 3f0:	85 b7       	in	r24, 0x35	; 53
 3f2:	82 60       	ori	r24, 0x02	; 2
 3f4:	85 bf       	out	0x35, r24	; 53
	
	ButtonInit('D', 2);
 3f6:	62 e0       	ldi	r22, 0x02	; 2
 3f8:	84 e4       	ldi	r24, 0x44	; 68
 3fa:	0e 94 45 01 	call	0x28a	; 0x28a <ButtonInit>
	connectPullup('D', 2);
 3fe:	62 e0       	ldi	r22, 0x02	; 2
 400:	84 e4       	ldi	r24, 0x44	; 68
 402:	0e 94 49 01 	call	0x292	; 0x292 <connectPullup>
	
	SPI_Master_init();
 406:	0e 94 96 04 	call	0x92c	; 0x92c <SPI_Master_init>
 40a:	ff cf       	rjmp	.-2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>

0000040c <__vector_14>:
		//x=UART_receiveData();
		//LCD_send_char(x,'c');
	}
}
ISR (USART_UDRE_vect)
{
 40c:	1f 92       	push	r1
 40e:	0f 92       	push	r0
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	0f 92       	push	r0
 414:	11 24       	eor	r1, r1
	
}
 416:	0f 90       	pop	r0
 418:	0f be       	out	0x3f, r0	; 63
 41a:	0f 90       	pop	r0
 41c:	1f 90       	pop	r1
 41e:	18 95       	reti

00000420 <__vector_13>:
ISR (USART_RXC_vect)
{
 420:	1f 92       	push	r1
 422:	0f 92       	push	r0
 424:	0f b6       	in	r0, 0x3f	; 63
 426:	0f 92       	push	r0
 428:	11 24       	eor	r1, r1
 42a:	2f 93       	push	r18
 42c:	3f 93       	push	r19
 42e:	8f 93       	push	r24
 430:	9f 93       	push	r25
 432:	ef 93       	push	r30
 434:	ff 93       	push	r31
	x = UDR;
 436:	8c b1       	in	r24, 0x0c	; 12
 438:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <x>
		barcode[i][z]=x;
 43c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <i>
 440:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <i+0x1>
 444:	30 91 64 00 	lds	r19, 0x0064	; 0x800064 <__data_end>
 448:	20 91 67 00 	lds	r18, 0x0067	; 0x800067 <x>
 44c:	fc 01       	movw	r30, r24
 44e:	ee 0f       	add	r30, r30
 450:	ff 1f       	adc	r31, r31
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	e8 0f       	add	r30, r24
 460:	f9 1f       	adc	r31, r25
 462:	e8 59       	subi	r30, 0x98	; 152
 464:	ff 4f       	sbci	r31, 0xFF	; 255
 466:	e3 0f       	add	r30, r19
 468:	f1 1d       	adc	r31, r1
 46a:	20 83       	st	Z, r18
	z++;
 46c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 470:	8f 5f       	subi	r24, 0xFF	; 255
 472:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
	if (z==BAR_CODE_LENGTH)
 476:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 47a:	81 30       	cpi	r24, 0x01	; 1
 47c:	49 f4       	brne	.+18     	; 0x490 <__vector_13+0x70>
	i++;
 47e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <i>
 482:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <i+0x1>
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <i+0x1>
 48c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <i>
	if (i==ITEMS_COUNT) i=0;
 490:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <i>
 494:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <i+0x1>
 498:	02 97       	sbiw	r24, 0x02	; 2
 49a:	21 f4       	brne	.+8      	; 0x4a4 <__vector_13+0x84>
 49c:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <i+0x1>
 4a0:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <i>
}
 4a4:	ff 91       	pop	r31
 4a6:	ef 91       	pop	r30
 4a8:	9f 91       	pop	r25
 4aa:	8f 91       	pop	r24
 4ac:	3f 91       	pop	r19
 4ae:	2f 91       	pop	r18
 4b0:	0f 90       	pop	r0
 4b2:	0f be       	out	0x3f, r0	; 63
 4b4:	0f 90       	pop	r0
 4b6:	1f 90       	pop	r1
 4b8:	18 95       	reti

000004ba <__vector_1>:

ISR(INT0_vect){
 4ba:	1f 92       	push	r1
 4bc:	0f 92       	push	r0
 4be:	0f b6       	in	r0, 0x3f	; 63
 4c0:	0f 92       	push	r0
 4c2:	11 24       	eor	r1, r1
 4c4:	2f 93       	push	r18
 4c6:	3f 93       	push	r19
 4c8:	4f 93       	push	r20
 4ca:	5f 93       	push	r21
 4cc:	6f 93       	push	r22
 4ce:	7f 93       	push	r23
 4d0:	8f 93       	push	r24
 4d2:	9f 93       	push	r25
 4d4:	af 93       	push	r26
 4d6:	bf 93       	push	r27
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	ef 93       	push	r30
 4de:	ff 93       	push	r31
	SPI_Master_Transmit_char(START_MESSAGE);
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	0e 94 b4 04 	call	0x968	; 0x968 <SPI_Master_Transmit_char>
 4e6:	2f ef       	ldi	r18, 0xFF	; 255
 4e8:	82 e5       	ldi	r24, 0x52	; 82
 4ea:	97 e0       	ldi	r25, 0x07	; 7
 4ec:	21 50       	subi	r18, 0x01	; 1
 4ee:	80 40       	sbci	r24, 0x00	; 0
 4f0:	90 40       	sbci	r25, 0x00	; 0
 4f2:	e1 f7       	brne	.-8      	; 0x4ec <__vector_1+0x32>
 4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__vector_1+0x3c>
 4f6:	00 00       	nop
	}
	*/
	//SPI_Master_Transmit_String("CDG55564d");
	//testArray[0] = (int)(barcode[0][0]-48)*100 + (int)(barcode[1][1]-48)*10 + (int)(barcode[2][2]-48);
	//testArray[1] = (int)(barcode[3][3]-48)*100 + (int)(barcode[4][4]-48)*10 + (int)(barcode[5][5]-48);
	SPI_Master_Transmit_char(testArray[0]);
 4f8:	c0 e6       	ldi	r28, 0x60	; 96
 4fa:	d0 e0       	ldi	r29, 0x00	; 0
 4fc:	88 81       	ld	r24, Y
 4fe:	99 81       	ldd	r25, Y+1	; 0x01
 500:	0e 94 b4 04 	call	0x968	; 0x968 <SPI_Master_Transmit_char>
	SPI_Master_Transmit_char(testArray[1]);
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	9b 81       	ldd	r25, Y+3	; 0x03
 508:	0e 94 b4 04 	call	0x968	; 0x968 <SPI_Master_Transmit_char>
	SPI_Master_Transmit_char(END_MESSAGE);
 50c:	8e ef       	ldi	r24, 0xFE	; 254
 50e:	0e 94 b4 04 	call	0x968	; 0x968 <SPI_Master_Transmit_char>
}
 512:	ff 91       	pop	r31
 514:	ef 91       	pop	r30
 516:	df 91       	pop	r29
 518:	cf 91       	pop	r28
 51a:	bf 91       	pop	r27
 51c:	af 91       	pop	r26
 51e:	9f 91       	pop	r25
 520:	8f 91       	pop	r24
 522:	7f 91       	pop	r23
 524:	6f 91       	pop	r22
 526:	5f 91       	pop	r21
 528:	4f 91       	pop	r20
 52a:	3f 91       	pop	r19
 52c:	2f 91       	pop	r18
 52e:	0f 90       	pop	r0
 530:	0f be       	out	0x3f, r0	; 63
 532:	0f 90       	pop	r0
 534:	1f 90       	pop	r1
 536:	18 95       	reti

00000538 <setPinDirection>:
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	fc 01       	movw	r30, r24
 53c:	e1 54       	subi	r30, 0x41	; 65
 53e:	f1 09       	sbc	r31, r1
 540:	e4 32       	cpi	r30, 0x24	; 36
 542:	f1 05       	cpc	r31, r1
 544:	08 f0       	brcs	.+2      	; 0x548 <setPinDirection+0x10>
 546:	67 c0       	rjmp	.+206    	; 0x616 <setPinDirection+0xde>
 548:	e2 5b       	subi	r30, 0xB2	; 178
 54a:	ff 4f       	sbci	r31, 0xFF	; 255
 54c:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 550:	41 30       	cpi	r20, 0x01	; 1
 552:	59 f4       	brne	.+22     	; 0x56a <setPinDirection+0x32>
 554:	2a b3       	in	r18, 0x1a	; 26
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <setPinDirection+0x28>
 55c:	88 0f       	add	r24, r24
 55e:	99 1f       	adc	r25, r25
 560:	6a 95       	dec	r22
 562:	e2 f7       	brpl	.-8      	; 0x55c <setPinDirection+0x24>
 564:	82 2b       	or	r24, r18
 566:	8a bb       	out	0x1a, r24	; 26
 568:	08 95       	ret
 56a:	2a b3       	in	r18, 0x1a	; 26
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	02 c0       	rjmp	.+4      	; 0x576 <setPinDirection+0x3e>
 572:	88 0f       	add	r24, r24
 574:	99 1f       	adc	r25, r25
 576:	6a 95       	dec	r22
 578:	e2 f7       	brpl	.-8      	; 0x572 <setPinDirection+0x3a>
 57a:	80 95       	com	r24
 57c:	82 23       	and	r24, r18
 57e:	8a bb       	out	0x1a, r24	; 26
 580:	08 95       	ret
 582:	41 30       	cpi	r20, 0x01	; 1
 584:	59 f4       	brne	.+22     	; 0x59c <setPinDirection+0x64>
 586:	27 b3       	in	r18, 0x17	; 23
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <setPinDirection+0x5a>
 58e:	88 0f       	add	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	6a 95       	dec	r22
 594:	e2 f7       	brpl	.-8      	; 0x58e <setPinDirection+0x56>
 596:	82 2b       	or	r24, r18
 598:	87 bb       	out	0x17, r24	; 23
 59a:	08 95       	ret
 59c:	27 b3       	in	r18, 0x17	; 23
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <setPinDirection+0x70>
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	6a 95       	dec	r22
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <setPinDirection+0x6c>
 5ac:	80 95       	com	r24
 5ae:	82 23       	and	r24, r18
 5b0:	87 bb       	out	0x17, r24	; 23
 5b2:	08 95       	ret
 5b4:	41 30       	cpi	r20, 0x01	; 1
 5b6:	59 f4       	brne	.+22     	; 0x5ce <setPinDirection+0x96>
 5b8:	24 b3       	in	r18, 0x14	; 20
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <setPinDirection+0x8c>
 5c0:	88 0f       	add	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	6a 95       	dec	r22
 5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <setPinDirection+0x88>
 5c8:	82 2b       	or	r24, r18
 5ca:	84 bb       	out	0x14, r24	; 20
 5cc:	08 95       	ret
 5ce:	24 b3       	in	r18, 0x14	; 20
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <setPinDirection+0xa2>
 5d6:	88 0f       	add	r24, r24
 5d8:	99 1f       	adc	r25, r25
 5da:	6a 95       	dec	r22
 5dc:	e2 f7       	brpl	.-8      	; 0x5d6 <setPinDirection+0x9e>
 5de:	80 95       	com	r24
 5e0:	82 23       	and	r24, r18
 5e2:	84 bb       	out	0x14, r24	; 20
 5e4:	08 95       	ret
 5e6:	41 30       	cpi	r20, 0x01	; 1
 5e8:	59 f4       	brne	.+22     	; 0x600 <setPinDirection+0xc8>
 5ea:	21 b3       	in	r18, 0x11	; 17
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <setPinDirection+0xbe>
 5f2:	88 0f       	add	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	6a 95       	dec	r22
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <setPinDirection+0xba>
 5fa:	82 2b       	or	r24, r18
 5fc:	81 bb       	out	0x11, r24	; 17
 5fe:	08 95       	ret
 600:	21 b3       	in	r18, 0x11	; 17
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	02 c0       	rjmp	.+4      	; 0x60c <setPinDirection+0xd4>
 608:	88 0f       	add	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	6a 95       	dec	r22
 60e:	e2 f7       	brpl	.-8      	; 0x608 <setPinDirection+0xd0>
 610:	80 95       	com	r24
 612:	82 23       	and	r24, r18
 614:	81 bb       	out	0x11, r24	; 17
 616:	08 95       	ret

00000618 <writePin>:
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	fc 01       	movw	r30, r24
 61c:	e1 54       	subi	r30, 0x41	; 65
 61e:	f1 09       	sbc	r31, r1
 620:	e4 32       	cpi	r30, 0x24	; 36
 622:	f1 05       	cpc	r31, r1
 624:	08 f0       	brcs	.+2      	; 0x628 <writePin+0x10>
 626:	67 c0       	rjmp	.+206    	; 0x6f6 <writePin+0xde>
 628:	ee 58       	subi	r30, 0x8E	; 142
 62a:	ff 4f       	sbci	r31, 0xFF	; 255
 62c:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 630:	41 30       	cpi	r20, 0x01	; 1
 632:	59 f4       	brne	.+22     	; 0x64a <writePin+0x32>
 634:	2b b3       	in	r18, 0x1b	; 27
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <writePin+0x28>
 63c:	88 0f       	add	r24, r24
 63e:	99 1f       	adc	r25, r25
 640:	6a 95       	dec	r22
 642:	e2 f7       	brpl	.-8      	; 0x63c <writePin+0x24>
 644:	82 2b       	or	r24, r18
 646:	8b bb       	out	0x1b, r24	; 27
 648:	08 95       	ret
 64a:	2b b3       	in	r18, 0x1b	; 27
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <writePin+0x3e>
 652:	88 0f       	add	r24, r24
 654:	99 1f       	adc	r25, r25
 656:	6a 95       	dec	r22
 658:	e2 f7       	brpl	.-8      	; 0x652 <writePin+0x3a>
 65a:	80 95       	com	r24
 65c:	82 23       	and	r24, r18
 65e:	8b bb       	out	0x1b, r24	; 27
 660:	08 95       	ret
 662:	41 30       	cpi	r20, 0x01	; 1
 664:	59 f4       	brne	.+22     	; 0x67c <writePin+0x64>
 666:	28 b3       	in	r18, 0x18	; 24
 668:	81 e0       	ldi	r24, 0x01	; 1
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	02 c0       	rjmp	.+4      	; 0x672 <writePin+0x5a>
 66e:	88 0f       	add	r24, r24
 670:	99 1f       	adc	r25, r25
 672:	6a 95       	dec	r22
 674:	e2 f7       	brpl	.-8      	; 0x66e <writePin+0x56>
 676:	82 2b       	or	r24, r18
 678:	88 bb       	out	0x18, r24	; 24
 67a:	08 95       	ret
 67c:	28 b3       	in	r18, 0x18	; 24
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	02 c0       	rjmp	.+4      	; 0x688 <writePin+0x70>
 684:	88 0f       	add	r24, r24
 686:	99 1f       	adc	r25, r25
 688:	6a 95       	dec	r22
 68a:	e2 f7       	brpl	.-8      	; 0x684 <writePin+0x6c>
 68c:	80 95       	com	r24
 68e:	82 23       	and	r24, r18
 690:	88 bb       	out	0x18, r24	; 24
 692:	08 95       	ret
 694:	41 30       	cpi	r20, 0x01	; 1
 696:	59 f4       	brne	.+22     	; 0x6ae <writePin+0x96>
 698:	25 b3       	in	r18, 0x15	; 21
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <writePin+0x8c>
 6a0:	88 0f       	add	r24, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	6a 95       	dec	r22
 6a6:	e2 f7       	brpl	.-8      	; 0x6a0 <writePin+0x88>
 6a8:	82 2b       	or	r24, r18
 6aa:	85 bb       	out	0x15, r24	; 21
 6ac:	08 95       	ret
 6ae:	25 b3       	in	r18, 0x15	; 21
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <writePin+0xa2>
 6b6:	88 0f       	add	r24, r24
 6b8:	99 1f       	adc	r25, r25
 6ba:	6a 95       	dec	r22
 6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <writePin+0x9e>
 6be:	80 95       	com	r24
 6c0:	82 23       	and	r24, r18
 6c2:	85 bb       	out	0x15, r24	; 21
 6c4:	08 95       	ret
 6c6:	41 30       	cpi	r20, 0x01	; 1
 6c8:	59 f4       	brne	.+22     	; 0x6e0 <writePin+0xc8>
 6ca:	22 b3       	in	r18, 0x12	; 18
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <writePin+0xbe>
 6d2:	88 0f       	add	r24, r24
 6d4:	99 1f       	adc	r25, r25
 6d6:	6a 95       	dec	r22
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <writePin+0xba>
 6da:	82 2b       	or	r24, r18
 6dc:	82 bb       	out	0x12, r24	; 18
 6de:	08 95       	ret
 6e0:	22 b3       	in	r18, 0x12	; 18
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <writePin+0xd4>
 6e8:	88 0f       	add	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	6a 95       	dec	r22
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <writePin+0xd0>
 6f0:	80 95       	com	r24
 6f2:	82 23       	and	r24, r18
 6f4:	82 bb       	out	0x12, r24	; 18
 6f6:	08 95       	ret

000006f8 <setPortDirection>:
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	fc 01       	movw	r30, r24
 6fc:	e1 54       	subi	r30, 0x41	; 65
 6fe:	f1 09       	sbc	r31, r1
 700:	e4 32       	cpi	r30, 0x24	; 36
 702:	f1 05       	cpc	r31, r1
 704:	f8 f4       	brcc	.+62     	; 0x744 <setPortDirection+0x4c>
 706:	ea 56       	subi	r30, 0x6A	; 106
 708:	ff 4f       	sbci	r31, 0xFF	; 255
 70a:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 70e:	61 30       	cpi	r22, 0x01	; 1
 710:	19 f4       	brne	.+6      	; 0x718 <setPortDirection+0x20>
 712:	8f ef       	ldi	r24, 0xFF	; 255
 714:	8a bb       	out	0x1a, r24	; 26
 716:	08 95       	ret
 718:	1a ba       	out	0x1a, r1	; 26
 71a:	08 95       	ret
 71c:	61 30       	cpi	r22, 0x01	; 1
 71e:	19 f4       	brne	.+6      	; 0x726 <setPortDirection+0x2e>
 720:	8f ef       	ldi	r24, 0xFF	; 255
 722:	87 bb       	out	0x17, r24	; 23
 724:	08 95       	ret
 726:	17 ba       	out	0x17, r1	; 23
 728:	08 95       	ret
 72a:	61 30       	cpi	r22, 0x01	; 1
 72c:	19 f4       	brne	.+6      	; 0x734 <setPortDirection+0x3c>
 72e:	8f ef       	ldi	r24, 0xFF	; 255
 730:	84 bb       	out	0x14, r24	; 20
 732:	08 95       	ret
 734:	14 ba       	out	0x14, r1	; 20
 736:	08 95       	ret
 738:	61 30       	cpi	r22, 0x01	; 1
 73a:	19 f4       	brne	.+6      	; 0x742 <setPortDirection+0x4a>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	81 bb       	out	0x11, r24	; 17
 740:	08 95       	ret
 742:	11 ba       	out	0x11, r1	; 17
 744:	08 95       	ret

00000746 <setPort>:
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	fc 01       	movw	r30, r24
 74a:	e1 54       	subi	r30, 0x41	; 65
 74c:	f1 09       	sbc	r31, r1
 74e:	e4 32       	cpi	r30, 0x24	; 36
 750:	f1 05       	cpc	r31, r1
 752:	58 f4       	brcc	.+22     	; 0x76a <setPort+0x24>
 754:	e6 54       	subi	r30, 0x46	; 70
 756:	ff 4f       	sbci	r31, 0xFF	; 255
 758:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 75c:	6b bb       	out	0x1b, r22	; 27
 75e:	08 95       	ret
 760:	68 bb       	out	0x18, r22	; 24
 762:	08 95       	ret
 764:	65 bb       	out	0x15, r22	; 21
 766:	08 95       	ret
 768:	62 bb       	out	0x12, r22	; 18
 76a:	08 95       	ret

0000076c <DIO_vsetpin_dir>:
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	fc 01       	movw	r30, r24
 770:	e1 54       	subi	r30, 0x41	; 65
 772:	f1 09       	sbc	r31, r1
 774:	e4 32       	cpi	r30, 0x24	; 36
 776:	f1 05       	cpc	r31, r1
 778:	08 f0       	brcs	.+2      	; 0x77c <DIO_vsetpin_dir+0x10>
 77a:	67 c0       	rjmp	.+206    	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 77c:	e2 52       	subi	r30, 0x22	; 34
 77e:	ff 4f       	sbci	r31, 0xFF	; 255
 780:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 784:	41 11       	cpse	r20, r1
 786:	0c c0       	rjmp	.+24     	; 0x7a0 <DIO_vsetpin_dir+0x34>
 788:	2a b3       	in	r18, 0x1a	; 26
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	02 c0       	rjmp	.+4      	; 0x794 <DIO_vsetpin_dir+0x28>
 790:	88 0f       	add	r24, r24
 792:	99 1f       	adc	r25, r25
 794:	6a 95       	dec	r22
 796:	e2 f7       	brpl	.-8      	; 0x790 <DIO_vsetpin_dir+0x24>
 798:	80 95       	com	r24
 79a:	82 23       	and	r24, r18
 79c:	8a bb       	out	0x1a, r24	; 26
 79e:	08 95       	ret
 7a0:	2a b3       	in	r18, 0x1a	; 26
 7a2:	81 e0       	ldi	r24, 0x01	; 1
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <DIO_vsetpin_dir+0x40>
 7a8:	88 0f       	add	r24, r24
 7aa:	99 1f       	adc	r25, r25
 7ac:	6a 95       	dec	r22
 7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <DIO_vsetpin_dir+0x3c>
 7b0:	82 2b       	or	r24, r18
 7b2:	8a bb       	out	0x1a, r24	; 26
 7b4:	08 95       	ret
 7b6:	41 11       	cpse	r20, r1
 7b8:	0c c0       	rjmp	.+24     	; 0x7d2 <DIO_vsetpin_dir+0x66>
 7ba:	27 b3       	in	r18, 0x17	; 23
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <DIO_vsetpin_dir+0x5a>
 7c2:	88 0f       	add	r24, r24
 7c4:	99 1f       	adc	r25, r25
 7c6:	6a 95       	dec	r22
 7c8:	e2 f7       	brpl	.-8      	; 0x7c2 <DIO_vsetpin_dir+0x56>
 7ca:	80 95       	com	r24
 7cc:	82 23       	and	r24, r18
 7ce:	87 bb       	out	0x17, r24	; 23
 7d0:	08 95       	ret
 7d2:	27 b3       	in	r18, 0x17	; 23
 7d4:	81 e0       	ldi	r24, 0x01	; 1
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <DIO_vsetpin_dir+0x72>
 7da:	88 0f       	add	r24, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	6a 95       	dec	r22
 7e0:	e2 f7       	brpl	.-8      	; 0x7da <DIO_vsetpin_dir+0x6e>
 7e2:	82 2b       	or	r24, r18
 7e4:	87 bb       	out	0x17, r24	; 23
 7e6:	08 95       	ret
 7e8:	41 11       	cpse	r20, r1
 7ea:	0c c0       	rjmp	.+24     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7ec:	24 b3       	in	r18, 0x14	; 20
 7ee:	81 e0       	ldi	r24, 0x01	; 1
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <DIO_vsetpin_dir+0x8c>
 7f4:	88 0f       	add	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	6a 95       	dec	r22
 7fa:	e2 f7       	brpl	.-8      	; 0x7f4 <DIO_vsetpin_dir+0x88>
 7fc:	80 95       	com	r24
 7fe:	82 23       	and	r24, r18
 800:	84 bb       	out	0x14, r24	; 20
 802:	08 95       	ret
 804:	24 b3       	in	r18, 0x14	; 20
 806:	81 e0       	ldi	r24, 0x01	; 1
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80c:	88 0f       	add	r24, r24
 80e:	99 1f       	adc	r25, r25
 810:	6a 95       	dec	r22
 812:	e2 f7       	brpl	.-8      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 814:	82 2b       	or	r24, r18
 816:	84 bb       	out	0x14, r24	; 20
 818:	08 95       	ret
 81a:	41 11       	cpse	r20, r1
 81c:	0c c0       	rjmp	.+24     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 81e:	21 b3       	in	r18, 0x11	; 17
 820:	81 e0       	ldi	r24, 0x01	; 1
 822:	90 e0       	ldi	r25, 0x00	; 0
 824:	02 c0       	rjmp	.+4      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 826:	88 0f       	add	r24, r24
 828:	99 1f       	adc	r25, r25
 82a:	6a 95       	dec	r22
 82c:	e2 f7       	brpl	.-8      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 82e:	80 95       	com	r24
 830:	82 23       	and	r24, r18
 832:	81 bb       	out	0x11, r24	; 17
 834:	08 95       	ret
 836:	21 b3       	in	r18, 0x11	; 17
 838:	81 e0       	ldi	r24, 0x01	; 1
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	02 c0       	rjmp	.+4      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83e:	88 0f       	add	r24, r24
 840:	99 1f       	adc	r25, r25
 842:	6a 95       	dec	r22
 844:	e2 f7       	brpl	.-8      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 846:	82 2b       	or	r24, r18
 848:	81 bb       	out	0x11, r24	; 17
 84a:	08 95       	ret

0000084c <DIO_vwritepin>:
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	fc 01       	movw	r30, r24
 850:	e1 54       	subi	r30, 0x41	; 65
 852:	f1 09       	sbc	r31, r1
 854:	e4 32       	cpi	r30, 0x24	; 36
 856:	f1 05       	cpc	r31, r1
 858:	08 f0       	brcs	.+2      	; 0x85c <DIO_vwritepin+0x10>
 85a:	67 c0       	rjmp	.+206    	; 0x92a <__stack+0xcb>
 85c:	ee 5f       	subi	r30, 0xFE	; 254
 85e:	fe 4f       	sbci	r31, 0xFE	; 254
 860:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__tablejump2__>
 864:	41 11       	cpse	r20, r1
 866:	0c c0       	rjmp	.+24     	; 0x880 <__stack+0x21>
 868:	2b b3       	in	r18, 0x1b	; 27
 86a:	81 e0       	ldi	r24, 0x01	; 1
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	02 c0       	rjmp	.+4      	; 0x874 <__stack+0x15>
 870:	88 0f       	add	r24, r24
 872:	99 1f       	adc	r25, r25
 874:	6a 95       	dec	r22
 876:	e2 f7       	brpl	.-8      	; 0x870 <__stack+0x11>
 878:	80 95       	com	r24
 87a:	82 23       	and	r24, r18
 87c:	8b bb       	out	0x1b, r24	; 27
 87e:	08 95       	ret
 880:	2b b3       	in	r18, 0x1b	; 27
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
 888:	88 0f       	add	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	6a 95       	dec	r22
 88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
 890:	82 2b       	or	r24, r18
 892:	8b bb       	out	0x1b, r24	; 27
 894:	08 95       	ret
 896:	41 11       	cpse	r20, r1
 898:	0c c0       	rjmp	.+24     	; 0x8b2 <__stack+0x53>
 89a:	28 b3       	in	r18, 0x18	; 24
 89c:	81 e0       	ldi	r24, 0x01	; 1
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <__stack+0x47>
 8a2:	88 0f       	add	r24, r24
 8a4:	99 1f       	adc	r25, r25
 8a6:	6a 95       	dec	r22
 8a8:	e2 f7       	brpl	.-8      	; 0x8a2 <__stack+0x43>
 8aa:	80 95       	com	r24
 8ac:	82 23       	and	r24, r18
 8ae:	88 bb       	out	0x18, r24	; 24
 8b0:	08 95       	ret
 8b2:	28 b3       	in	r18, 0x18	; 24
 8b4:	81 e0       	ldi	r24, 0x01	; 1
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	02 c0       	rjmp	.+4      	; 0x8be <__stack+0x5f>
 8ba:	88 0f       	add	r24, r24
 8bc:	99 1f       	adc	r25, r25
 8be:	6a 95       	dec	r22
 8c0:	e2 f7       	brpl	.-8      	; 0x8ba <__stack+0x5b>
 8c2:	82 2b       	or	r24, r18
 8c4:	88 bb       	out	0x18, r24	; 24
 8c6:	08 95       	ret
 8c8:	41 11       	cpse	r20, r1
 8ca:	0c c0       	rjmp	.+24     	; 0x8e4 <__stack+0x85>
 8cc:	25 b3       	in	r18, 0x15	; 21
 8ce:	81 e0       	ldi	r24, 0x01	; 1
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	02 c0       	rjmp	.+4      	; 0x8d8 <__stack+0x79>
 8d4:	88 0f       	add	r24, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	6a 95       	dec	r22
 8da:	e2 f7       	brpl	.-8      	; 0x8d4 <__stack+0x75>
 8dc:	80 95       	com	r24
 8de:	82 23       	and	r24, r18
 8e0:	85 bb       	out	0x15, r24	; 21
 8e2:	08 95       	ret
 8e4:	25 b3       	in	r18, 0x15	; 21
 8e6:	81 e0       	ldi	r24, 0x01	; 1
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <__stack+0x91>
 8ec:	88 0f       	add	r24, r24
 8ee:	99 1f       	adc	r25, r25
 8f0:	6a 95       	dec	r22
 8f2:	e2 f7       	brpl	.-8      	; 0x8ec <__stack+0x8d>
 8f4:	82 2b       	or	r24, r18
 8f6:	85 bb       	out	0x15, r24	; 21
 8f8:	08 95       	ret
 8fa:	41 11       	cpse	r20, r1
 8fc:	0c c0       	rjmp	.+24     	; 0x916 <__stack+0xb7>
 8fe:	22 b3       	in	r18, 0x12	; 18
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0xab>
 906:	88 0f       	add	r24, r24
 908:	99 1f       	adc	r25, r25
 90a:	6a 95       	dec	r22
 90c:	e2 f7       	brpl	.-8      	; 0x906 <__stack+0xa7>
 90e:	80 95       	com	r24
 910:	82 23       	and	r24, r18
 912:	82 bb       	out	0x12, r24	; 18
 914:	08 95       	ret
 916:	22 b3       	in	r18, 0x12	; 18
 918:	81 e0       	ldi	r24, 0x01	; 1
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0xc3>
 91e:	88 0f       	add	r24, r24
 920:	99 1f       	adc	r25, r25
 922:	6a 95       	dec	r22
 924:	e2 f7       	brpl	.-8      	; 0x91e <__stack+0xbf>
 926:	82 2b       	or	r24, r18
 928:	82 bb       	out	0x12, r24	; 18
 92a:	08 95       	ret

0000092c <SPI_Master_init>:
 92c:	41 e0       	ldi	r20, 0x01	; 1
 92e:	64 e0       	ldi	r22, 0x04	; 4
 930:	82 e4       	ldi	r24, 0x42	; 66
 932:	0e 94 b6 03 	call	0x76c	; 0x76c <DIO_vsetpin_dir>
 936:	41 e0       	ldi	r20, 0x01	; 1
 938:	65 e0       	ldi	r22, 0x05	; 5
 93a:	82 e4       	ldi	r24, 0x42	; 66
 93c:	0e 94 b6 03 	call	0x76c	; 0x76c <DIO_vsetpin_dir>
 940:	41 e0       	ldi	r20, 0x01	; 1
 942:	67 e0       	ldi	r22, 0x07	; 7
 944:	82 e4       	ldi	r24, 0x42	; 66
 946:	0e 94 b6 03 	call	0x76c	; 0x76c <DIO_vsetpin_dir>
 94a:	8d b1       	in	r24, 0x0d	; 13
 94c:	80 61       	ori	r24, 0x10	; 16
 94e:	8d b9       	out	0x0d, r24	; 13
 950:	8d b1       	in	r24, 0x0d	; 13
 952:	81 60       	ori	r24, 0x01	; 1
 954:	8d b9       	out	0x0d, r24	; 13
 956:	8d b1       	in	r24, 0x0d	; 13
 958:	80 64       	ori	r24, 0x40	; 64
 95a:	8d b9       	out	0x0d, r24	; 13
 95c:	41 e0       	ldi	r20, 0x01	; 1
 95e:	64 e0       	ldi	r22, 0x04	; 4
 960:	82 e4       	ldi	r24, 0x42	; 66
 962:	0e 94 26 04 	call	0x84c	; 0x84c <DIO_vwritepin>
 966:	08 95       	ret

00000968 <SPI_Master_Transmit_char>:
 968:	cf 93       	push	r28
 96a:	c8 2f       	mov	r28, r24
 96c:	40 e0       	ldi	r20, 0x00	; 0
 96e:	64 e0       	ldi	r22, 0x04	; 4
 970:	82 e4       	ldi	r24, 0x42	; 66
 972:	0e 94 26 04 	call	0x84c	; 0x84c <DIO_vwritepin>
 976:	cf b9       	out	0x0f, r28	; 15
 978:	77 9b       	sbis	0x0e, 7	; 14
 97a:	fe cf       	rjmp	.-4      	; 0x978 <SPI_Master_Transmit_char+0x10>
 97c:	8f b1       	in	r24, 0x0f	; 15
 97e:	cf 91       	pop	r28
 980:	08 95       	ret

00000982 <UART_init>:
 982:	af 92       	push	r10
 984:	bf 92       	push	r11
 986:	cf 92       	push	r12
 988:	df 92       	push	r13
 98a:	ef 92       	push	r14
 98c:	ff 92       	push	r15
 98e:	0f 93       	push	r16
 990:	1f 93       	push	r17
 992:	cf 93       	push	r28
 994:	df 93       	push	r29
 996:	04 e0       	ldi	r16, 0x04	; 4
 998:	0e 94 5e 05 	call	0xabc	; 0xabc <__ashldi3>
 99c:	a2 2e       	mov	r10, r18
 99e:	b3 2e       	mov	r11, r19
 9a0:	c4 2e       	mov	r12, r20
 9a2:	d5 2e       	mov	r13, r21
 9a4:	e6 2e       	mov	r14, r22
 9a6:	f7 2e       	mov	r15, r23
 9a8:	08 2f       	mov	r16, r24
 9aa:	19 2f       	mov	r17, r25
 9ac:	20 e0       	ldi	r18, 0x00	; 0
 9ae:	32 e1       	ldi	r19, 0x12	; 18
 9b0:	4a e7       	ldi	r20, 0x7A	; 122
 9b2:	50 e0       	ldi	r21, 0x00	; 0
 9b4:	60 e0       	ldi	r22, 0x00	; 0
 9b6:	70 e0       	ldi	r23, 0x00	; 0
 9b8:	80 e0       	ldi	r24, 0x00	; 0
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	0e 94 01 05 	call	0xa02	; 0xa02 <__udivdi3>
 9c0:	02 2f       	mov	r16, r18
 9c2:	13 2f       	mov	r17, r19
 9c4:	01 50       	subi	r16, 0x01	; 1
 9c6:	11 09       	sbc	r17, r1
 9c8:	10 bd       	out	0x20, r17	; 32
 9ca:	09 b9       	out	0x09, r16	; 9
 9cc:	8a b1       	in	r24, 0x0a	; 10
 9ce:	88 61       	ori	r24, 0x18	; 24
 9d0:	8a b9       	out	0x0a, r24	; 10
 9d2:	8a b1       	in	r24, 0x0a	; 10
 9d4:	80 6c       	ori	r24, 0xC0	; 192
 9d6:	8a b9       	out	0x0a, r24	; 10
 9d8:	86 e8       	ldi	r24, 0x86	; 134
 9da:	80 bd       	out	0x20, r24	; 32
 9dc:	df 91       	pop	r29
 9de:	cf 91       	pop	r28
 9e0:	1f 91       	pop	r17
 9e2:	0f 91       	pop	r16
 9e4:	ff 90       	pop	r15
 9e6:	ef 90       	pop	r14
 9e8:	df 90       	pop	r13
 9ea:	cf 90       	pop	r12
 9ec:	bf 90       	pop	r11
 9ee:	af 90       	pop	r10
 9f0:	08 95       	ret

000009f2 <__tablejump2__>:
 9f2:	ee 0f       	add	r30, r30
 9f4:	ff 1f       	adc	r31, r31
 9f6:	05 90       	lpm	r0, Z+
 9f8:	f4 91       	lpm	r31, Z
 9fa:	e0 2d       	mov	r30, r0
 9fc:	09 94       	ijmp

000009fe <__umoddi3>:
 9fe:	68 94       	set
 a00:	01 c0       	rjmp	.+2      	; 0xa04 <__udivdi3_umoddi3>

00000a02 <__udivdi3>:
 a02:	e8 94       	clt

00000a04 <__udivdi3_umoddi3>:
 a04:	8f 92       	push	r8
 a06:	9f 92       	push	r9
 a08:	cf 93       	push	r28
 a0a:	df 93       	push	r29
 a0c:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__udivmod64>
 a10:	df 91       	pop	r29
 a12:	cf 91       	pop	r28
 a14:	9f 90       	pop	r9
 a16:	8f 90       	pop	r8
 a18:	08 95       	ret

00000a1a <__udivmod64>:
 a1a:	88 24       	eor	r8, r8
 a1c:	99 24       	eor	r9, r9
 a1e:	f4 01       	movw	r30, r8
 a20:	e4 01       	movw	r28, r8
 a22:	b0 e4       	ldi	r27, 0x40	; 64
 a24:	9f 93       	push	r25
 a26:	aa 27       	eor	r26, r26
 a28:	9a 15       	cp	r25, r10
 a2a:	8b 04       	cpc	r8, r11
 a2c:	9c 04       	cpc	r9, r12
 a2e:	ed 05       	cpc	r30, r13
 a30:	fe 05       	cpc	r31, r14
 a32:	cf 05       	cpc	r28, r15
 a34:	d0 07       	cpc	r29, r16
 a36:	a1 07       	cpc	r26, r17
 a38:	98 f4       	brcc	.+38     	; 0xa60 <__udivmod64+0x46>
 a3a:	ad 2f       	mov	r26, r29
 a3c:	dc 2f       	mov	r29, r28
 a3e:	cf 2f       	mov	r28, r31
 a40:	fe 2f       	mov	r31, r30
 a42:	e9 2d       	mov	r30, r9
 a44:	98 2c       	mov	r9, r8
 a46:	89 2e       	mov	r8, r25
 a48:	98 2f       	mov	r25, r24
 a4a:	87 2f       	mov	r24, r23
 a4c:	76 2f       	mov	r23, r22
 a4e:	65 2f       	mov	r22, r21
 a50:	54 2f       	mov	r21, r20
 a52:	43 2f       	mov	r20, r19
 a54:	32 2f       	mov	r19, r18
 a56:	22 27       	eor	r18, r18
 a58:	b8 50       	subi	r27, 0x08	; 8
 a5a:	31 f7       	brne	.-52     	; 0xa28 <__udivmod64+0xe>
 a5c:	bf 91       	pop	r27
 a5e:	27 c0       	rjmp	.+78     	; 0xaae <__udivmod64+0x94>
 a60:	1b 2e       	mov	r1, r27
 a62:	bf 91       	pop	r27
 a64:	bb 27       	eor	r27, r27
 a66:	22 0f       	add	r18, r18
 a68:	33 1f       	adc	r19, r19
 a6a:	44 1f       	adc	r20, r20
 a6c:	55 1f       	adc	r21, r21
 a6e:	66 1f       	adc	r22, r22
 a70:	77 1f       	adc	r23, r23
 a72:	88 1f       	adc	r24, r24
 a74:	99 1f       	adc	r25, r25
 a76:	88 1c       	adc	r8, r8
 a78:	99 1c       	adc	r9, r9
 a7a:	ee 1f       	adc	r30, r30
 a7c:	ff 1f       	adc	r31, r31
 a7e:	cc 1f       	adc	r28, r28
 a80:	dd 1f       	adc	r29, r29
 a82:	aa 1f       	adc	r26, r26
 a84:	bb 1f       	adc	r27, r27
 a86:	8a 14       	cp	r8, r10
 a88:	9b 04       	cpc	r9, r11
 a8a:	ec 05       	cpc	r30, r12
 a8c:	fd 05       	cpc	r31, r13
 a8e:	ce 05       	cpc	r28, r14
 a90:	df 05       	cpc	r29, r15
 a92:	a0 07       	cpc	r26, r16
 a94:	b1 07       	cpc	r27, r17
 a96:	48 f0       	brcs	.+18     	; 0xaaa <__udivmod64+0x90>
 a98:	8a 18       	sub	r8, r10
 a9a:	9b 08       	sbc	r9, r11
 a9c:	ec 09       	sbc	r30, r12
 a9e:	fd 09       	sbc	r31, r13
 aa0:	ce 09       	sbc	r28, r14
 aa2:	df 09       	sbc	r29, r15
 aa4:	a0 0b       	sbc	r26, r16
 aa6:	b1 0b       	sbc	r27, r17
 aa8:	21 60       	ori	r18, 0x01	; 1
 aaa:	1a 94       	dec	r1
 aac:	e1 f6       	brne	.-72     	; 0xa66 <__udivmod64+0x4c>
 aae:	2e f4       	brtc	.+10     	; 0xaba <__udivmod64+0xa0>
 ab0:	94 01       	movw	r18, r8
 ab2:	af 01       	movw	r20, r30
 ab4:	be 01       	movw	r22, r28
 ab6:	cd 01       	movw	r24, r26
 ab8:	00 0c       	add	r0, r0
 aba:	08 95       	ret

00000abc <__ashldi3>:
 abc:	0f 93       	push	r16
 abe:	08 30       	cpi	r16, 0x08	; 8
 ac0:	90 f0       	brcs	.+36     	; 0xae6 <__ashldi3+0x2a>
 ac2:	98 2f       	mov	r25, r24
 ac4:	87 2f       	mov	r24, r23
 ac6:	76 2f       	mov	r23, r22
 ac8:	65 2f       	mov	r22, r21
 aca:	54 2f       	mov	r21, r20
 acc:	43 2f       	mov	r20, r19
 ace:	32 2f       	mov	r19, r18
 ad0:	22 27       	eor	r18, r18
 ad2:	08 50       	subi	r16, 0x08	; 8
 ad4:	f4 cf       	rjmp	.-24     	; 0xabe <__ashldi3+0x2>
 ad6:	22 0f       	add	r18, r18
 ad8:	33 1f       	adc	r19, r19
 ada:	44 1f       	adc	r20, r20
 adc:	55 1f       	adc	r21, r21
 ade:	66 1f       	adc	r22, r22
 ae0:	77 1f       	adc	r23, r23
 ae2:	88 1f       	adc	r24, r24
 ae4:	99 1f       	adc	r25, r25
 ae6:	0a 95       	dec	r16
 ae8:	b2 f7       	brpl	.-20     	; 0xad6 <__ashldi3+0x1a>
 aea:	0f 91       	pop	r16
 aec:	08 95       	ret

00000aee <_exit>:
 aee:	f8 94       	cli

00000af0 <__stop_program>:
 af0:	ff cf       	rjmp	.-2      	; 0xaf0 <__stop_program>
